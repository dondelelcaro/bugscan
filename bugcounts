#! /usr/bin/perl
# vim: ts=4 sw=4 nowrap

# Generate some counts for the bugreports

use Getopt::Std;
require scanlib;
require bugcfg;
use strict;
use warnings;

my $Version		= "BugCount 1.1\nCopyright (C) Wichert Akkerman <wakkerma\@debian.org>\n";
my $statusfile		= "status";
my $commentsfile	= "comments";

sub ShowVersion() {
	print "$Version\n";
	exit 0;
}

sub ShowUsage() {
	print <<EOF;
Usage:
  $0 [-V] [-h] [-S file] [-C file]
Options:
  -V    show version
  -h    show some (hopefully) helpfull information
  -S    use different statusfile
  -C    use different commentsfile
EOF
	exit 0;
}

our ($opt_h,$opt_V,$opt_S,$opt_C);

getopts('VhS:C:');
ShowUsage if ($opt_h);
ShowVersion if ($opt_V);
$statusfile=$opt_S if ($opt_S);
$commentsfile=$opt_C if ($opt_C);

scanlib::readstatus($statusfile);
scanlib::readcomments($commentsfile);

my $total=0;		# total number of bugs
my $patchcount=0;	# Number of bugs that have a fix proposed
my $pendingcount=0;	# Number of bugs that will have a fix uploaded RSN
my $ignorecount=0;      # Number of bugs being ignored
my $nottestingcount=0;	# Number of bugs on packages not in testing
my $worrycount=0;	# Number of bugs we're actually worried about
my %sectcount=();	# Bugs per type

for my $p (keys %scanlib::packagelist) {
	next if (defined $bugcfg::exclude{$p});
	for my $nr (sort @{$scanlib::packagelist{$p}}) {
		next if (defined $bugcfg::exclude{$nr});
		$total++;
		$pendingcount++ if ($scanlib::bugs{$nr} =~ m/^\[[^]]*P/);
		$patchcount++ if ($scanlib::bugs{$nr} =~ m/^\[[^]]*\+/);
		$ignorecount++ if ($scanlib::bugs{$nr} =~ m/^\[[^]]*I/);
		$nottestingcount++ if ($scanlib::bugs{$nr} =~ m/ \[[^]]*X/);
		if (defined $scanlib::comments{$nr}) {
			my $sect = ($scanlib::comments{$nr} =~ m/\[([^]]*)\]/);
			$sectcount{$sect}++;
		}
		$worrycount++ if (scanlib::check_worry($scanlib::bugs{$nr}));
	}
}

printf("%d %d %d 0 %d %d %d\n", $total, $pendingcount, $patchcount, $ignorecount, $nottestingcount, $worrycount);
