#!/usr/bin/perl
# vim: ts=4 sw=4 nowrap

# Generate a report of the release-critical bugs for packages

use Getopt::Std;
require scanlib;
require bugcfg;
use strict;
use warnings;

my $Version		= "BugReport 1.4\nCopyright (C) 1998-2002 Wichert Akkerman <wakkerma\@debian.org>\n";
my $html		= 0;
my $statusfile		= "status";
my $commentsfile	= "comments";
my $NMUfile		= "/debian/home/doogie/public_html/incoming/bugs_closed";
$NMUfile		= "/debian/home/doogie/chgscan/db/bugs_closed"; # Changed as of request by dark  -Joey, 99/11/22
$NMUfile		= "http://auric.debian.org/~doogie/incoming/bugs_closed"; # Changed as of request by dark  -Joey, 99/11/22

sub ShowVersion() {
	print "$Version\n";
	exit 0;
}

sub ShowUsage() {
	print <<EOF;
Usage:
  $0 [-V] [-h] [-H] [-l] [-s] [-d distrib] [-S file] [-C file]
Options:
  -V    show version
  -h    show some (hopefully) helpful information
  -H    produce HTML output
  -l    list all release-critical bugs
  -s    list bug statistics
  -t    show bugs relevant for testing only
  -d    only list these distributions (comma-separated)
  -S    use different statusfile
  -C    use different commentsfile
EOF
	exit 0;
}

sub PrintPackageHeader() {
	my $p	= shift;	# Package to print
	my ($name, $email);	# Name & email of maintainer

	if ($html) {
		print "<div class=\"package\"><pre>";
		print "<a name=\"$p\"><strong>Package:</strong></a> " . scanlib::wwwname($p);
		print " ($scanlib::section{$p}).\n";
		print "<strong>Maintainer:</strong> ";
		if (defined($scanlib::maintainer{$p})) {
			if ($scanlib::maintainer{$p} =~ /(.*) <([^>]*)>/) {
				($name,$email) = ($1,$2);
			} elsif ($scanlib::maintainer{$p} =~ /<(.*) \((.*)\)>/) {
				($name,$email) = ($1,$2);
			} elsif ($scanlib::maintainer{$p} =~ /<(.*)>/) {
				$name = $email = $1;
			}
			print "$name &lt;<a href=\"http://bugs.debian.org/$email\">$email</A>&gt;\n";
		} else {
			print "unknown\n";
		}
	} else {
		print "\nPackage: $p ($scanlib::section{$p})\n";
		print "Maintainer: " . (defined($scanlib::maintainer{$p}) ? $scanlib::maintainer{$p} : "unknown") . "\n";
	}
}

sub PrintPackageFooter() {
	my $p	= shift;	# Package to print

	if ($html) {
		print "</pre></div>\n";
	}
}

sub MakeBuglist() {
	my $p;				# Index variable
	my $nr;			# Current bugnumber
	my $sect;			# BTS-subsection for bugnumber
	my $header;		# Flag if packagename has already been printed
	my $fontset;		# Did we change the font?

	for my $p (sort {$a->[0] <=> $b->[0]} keys %scanlib::packagelist) {
		next if (defined $bugcfg::exclude{$p});
		$header = 0;
		$fontset = 0;
		if (defined $scanlib::comments{$p}) {
			if ($html && defined($scanlib::comments{$p})) {
				if ($scanlib::comments{$p} =~ m/^\[REMOVE\]/) {
					$fontset=1;
					print "<span style=\"color: red\">";
				}
			}
			$header=1;
			&PrintPackageHeader($p);
			print $scanlib::comments{$p};
		}
